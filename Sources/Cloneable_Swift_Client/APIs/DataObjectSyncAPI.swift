//
// DataObjectSyncAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class DataObjectSyncAPI {

    /**
     Archive multiple data objects by IDs
     
     - parameter archiveDataObjectsRequest: (body) Body (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: ArchiveDataObjects200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func archiveDataObjects(archiveDataObjectsRequest: ArchiveDataObjectsRequest? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> ArchiveDataObjects200Response {
        return try await archiveDataObjectsWithRequestBuilder(archiveDataObjectsRequest: archiveDataObjectsRequest, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Archive multiple data objects by IDs
     - POST /data-object-sync/archive
     - parameter archiveDataObjectsRequest: (body) Body (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<ArchiveDataObjects200Response> 
     */
    open class func archiveDataObjectsWithRequestBuilder(archiveDataObjectsRequest: ArchiveDataObjectsRequest? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<ArchiveDataObjects200Response> {
        let localVariablePath = "/data-object-sync/archive"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: archiveDataObjectsRequest, codableHelper: apiConfiguration.codableHelper)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ArchiveDataObjects200Response>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Find data objects containing a specific value in their array fields
     
     - parameter searchId: (query)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: [FindDataObjectFieldsByArrayValue200ResponseInner]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func findDataObjectFieldsByArrayValue(searchId: String, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> [FindDataObjectFieldsByArrayValue200ResponseInner] {
        return try await findDataObjectFieldsByArrayValueWithRequestBuilder(searchId: searchId, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Find data objects containing a specific value in their array fields
     - GET /data-objects-sync/fields-by-array
     - parameter searchId: (query)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<[FindDataObjectFieldsByArrayValue200ResponseInner]> 
     */
    open class func findDataObjectFieldsByArrayValueWithRequestBuilder(searchId: String, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<[FindDataObjectFieldsByArrayValue200ResponseInner]> {
        let localVariablePath = "/data-objects-sync/fields-by-array"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "searchId": (wrappedValue: searchId.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[FindDataObjectFieldsByArrayValue200ResponseInner]>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get filtered and paginated data objects
     
     - parameter id: (query)  (optional)
     - parameter pageIndex: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter filters: (query)  (optional)
     - parameter latest: (query)  (optional)
     - parameter sorting: (query)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: GetDataObjectsPaged200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getFilteredDataObjects(id: [String]? = nil, pageIndex: Int? = nil, pageSize: Int? = nil, filters: GetFilteredDataObjectsFiltersParameter? = nil, latest: String? = nil, sorting: GetDataObjectsPagedSortingParameter? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> GetDataObjectsPaged200Response {
        return try await getFilteredDataObjectsWithRequestBuilder(id: id, pageIndex: pageIndex, pageSize: pageSize, filters: filters, latest: latest, sorting: sorting, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get filtered and paginated data objects
     - GET /data-object-sync/filtered-data-objects
     - parameter id: (query)  (optional)
     - parameter pageIndex: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter filters: (query)  (optional)
     - parameter latest: (query)  (optional)
     - parameter sorting: (query)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<GetDataObjectsPaged200Response> 
     */
    open class func getFilteredDataObjectsWithRequestBuilder(id: [String]? = nil, pageIndex: Int? = nil, pageSize: Int? = nil, filters: GetFilteredDataObjectsFiltersParameter? = nil, latest: String? = nil, sorting: GetDataObjectsPagedSortingParameter? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<GetDataObjectsPaged200Response> {
        let localVariablePath = "/data-object-sync/filtered-data-objects"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "id": (wrappedValue: id?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "page_index": (wrappedValue: pageIndex?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "page_size": (wrappedValue: pageSize?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "filters": (wrappedValue: filters?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "latest": (wrappedValue: latest?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "sorting": (wrappedValue: sorting?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetDataObjectsPaged200Response>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get a flattened data object
     
     - parameter id: (path)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: GetOne200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getOne(id: String, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> GetOne200Response {
        return try await getOneWithRequestBuilder(id: id, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get a flattened data object
     - GET /data-object-sync/data-object/{id}
     - parameter id: (path)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<GetOne200Response> 
     */
    open class func getOneWithRequestBuilder(id: String, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<GetOne200Response> {
        var localVariablePath = "/data-object-sync/data-object/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetOne200Response>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get a data object template
     
     - parameter id: (path)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: DataObjectTemplateSchema
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getTemplate(id: String, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> DataObjectTemplateSchema {
        return try await getTemplateWithRequestBuilder(id: id, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get a data object template
     - GET /data-object-sync/template/{id}
     - parameter id: (path)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<DataObjectTemplateSchema> 
     */
    open class func getTemplateWithRequestBuilder(id: String, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<DataObjectTemplateSchema> {
        var localVariablePath = "/data-object-sync/template/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<DataObjectTemplateSchema>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     List all data object templates
     
     - parameter apiConfiguration: The configuration for the http request.
     - returns: DataObjectTemplateSchema
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func listTemplates(apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> DataObjectTemplateSchema {
        return try await listTemplatesWithRequestBuilder(apiConfiguration: apiConfiguration).execute().body
    }

    /**
     List all data object templates
     - GET /data-object-sync/templates
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<DataObjectTemplateSchema> 
     */
    open class func listTemplatesWithRequestBuilder(apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<DataObjectTemplateSchema> {
        let localVariablePath = "/data-object-sync/templates"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<DataObjectTemplateSchema>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Query data objects by template name and field values
     
     - parameter templateNameId: (query)  
     - parameter fieldFilters: (query)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: [QueryDataObjectFields200ResponseInner]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func queryDataObjectFields(templateNameId: String, fieldFilters: [String: JSONValue]? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> [QueryDataObjectFields200ResponseInner] {
        return try await queryDataObjectFieldsWithRequestBuilder(templateNameId: templateNameId, fieldFilters: fieldFilters, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Query data objects by template name and field values
     - GET /data-objects-sync/query
     - parameter templateNameId: (query)  
     - parameter fieldFilters: (query)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<[QueryDataObjectFields200ResponseInner]> 
     */
    open class func queryDataObjectFieldsWithRequestBuilder(templateNameId: String, fieldFilters: [String: JSONValue]? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<[QueryDataObjectFields200ResponseInner]> {
        let localVariablePath = "/data-objects-sync/query"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "template_name_id": (wrappedValue: templateNameId.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "field_filters": (wrappedValue: fieldFilters?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[QueryDataObjectFields200ResponseInner]>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Sync a data object
     
     - parameter syncDataObjectRequestInner: (body) Body (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: String
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func syncDataObject(syncDataObjectRequestInner: [SyncDataObjectRequestInner]? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> String {
        return try await syncDataObjectWithRequestBuilder(syncDataObjectRequestInner: syncDataObjectRequestInner, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Sync a data object
     - POST /data-object-sync/data-object
     - parameter syncDataObjectRequestInner: (body) Body (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<String> 
     */
    open class func syncDataObjectWithRequestBuilder(syncDataObjectRequestInner: [SyncDataObjectRequestInner]? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<String> {
        let localVariablePath = "/data-object-sync/data-object"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: syncDataObjectRequestInner, codableHelper: apiConfiguration.codableHelper)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<String>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }
}
