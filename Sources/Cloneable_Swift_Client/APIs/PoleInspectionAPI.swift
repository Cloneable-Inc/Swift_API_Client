//
// PoleInspectionAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class PoleInspectionAPI {

    /**
     Bulk update job statuses
     
     - parameter bulkUpdateJobStatusRequest: (body) Body (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: BulkUpdateJobStatus200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func bulkUpdateJobStatus(bulkUpdateJobStatusRequest: BulkUpdateJobStatusRequest? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> BulkUpdateJobStatus200Response {
        return try await bulkUpdateJobStatusWithRequestBuilder(bulkUpdateJobStatusRequest: bulkUpdateJobStatusRequest, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Bulk update job statuses
     - POST /pole-inspection/jobs/bulk/status
     - parameter bulkUpdateJobStatusRequest: (body) Body (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<BulkUpdateJobStatus200Response> 
     */
    open class func bulkUpdateJobStatusWithRequestBuilder(bulkUpdateJobStatusRequest: BulkUpdateJobStatusRequest? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<BulkUpdateJobStatus200Response> {
        let localVariablePath = "/pole-inspection/jobs/bulk/status"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: bulkUpdateJobStatusRequest, codableHelper: apiConfiguration.codableHelper)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BulkUpdateJobStatus200Response>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Create a new pole inspection configuration
     
     - parameter createConfigurationRequest: (body) Body (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: GetConfigurations200ResponseConfigurationsInner
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func createConfiguration(createConfigurationRequest: CreateConfigurationRequest? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> GetConfigurations200ResponseConfigurationsInner {
        return try await createConfigurationWithRequestBuilder(createConfigurationRequest: createConfigurationRequest, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Create a new pole inspection configuration
     - POST /pole-inspection/configurations
     - parameter createConfigurationRequest: (body) Body (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<GetConfigurations200ResponseConfigurationsInner> 
     */
    open class func createConfigurationWithRequestBuilder(createConfigurationRequest: CreateConfigurationRequest? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<GetConfigurations200ResponseConfigurationsInner> {
        let localVariablePath = "/pole-inspection/configurations"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createConfigurationRequest, codableHelper: apiConfiguration.codableHelper)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetConfigurations200ResponseConfigurationsInner>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Create a new pole inspection job
     
     - parameter createJobRequest: (body) Body (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: GetJobs200ResponseJobsInner
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func createJob(createJobRequest: CreateJobRequest? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> GetJobs200ResponseJobsInner {
        return try await createJobWithRequestBuilder(createJobRequest: createJobRequest, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Create a new pole inspection job
     - POST /pole-inspection/jobs
     - parameter createJobRequest: (body) Body (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<GetJobs200ResponseJobsInner> 
     */
    open class func createJobWithRequestBuilder(createJobRequest: CreateJobRequest? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<GetJobs200ResponseJobsInner> {
        let localVariablePath = "/pole-inspection/jobs"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createJobRequest, codableHelper: apiConfiguration.codableHelper)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetJobs200ResponseJobsInner>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Delete a pole inspection configuration
     
     - parameter id: (path)  
     - parameter body: (body) Body (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: JSONValue
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func deleteConfiguration(id: String, body: JSONValue? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> JSONValue {
        return try await deleteConfigurationWithRequestBuilder(id: id, body: body, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Delete a pole inspection configuration
     - DELETE /pole-inspection/configurations/{id}
     - parameter id: (path)  
     - parameter body: (body) Body (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<JSONValue> 
     */
    open class func deleteConfigurationWithRequestBuilder(id: String, body: JSONValue? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<JSONValue> {
        var localVariablePath = "/pole-inspection/configurations/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body, codableHelper: apiConfiguration.codableHelper)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<JSONValue>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Delete a pole inspection job
     
     - parameter id: (path)  
     - parameter body: (body) Body (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: JSONValue
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func deleteJob(id: String, body: JSONValue? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> JSONValue {
        return try await deleteJobWithRequestBuilder(id: id, body: body, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Delete a pole inspection job
     - DELETE /pole-inspection/jobs/{id}
     - parameter id: (path)  
     - parameter body: (body) Body (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<JSONValue> 
     */
    open class func deleteJobWithRequestBuilder(id: String, body: JSONValue? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<JSONValue> {
        var localVariablePath = "/pole-inspection/jobs/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body, codableHelper: apiConfiguration.codableHelper)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<JSONValue>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get a single pole inspection configuration by ID
     
     - parameter id: (path)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: GetConfigurations200ResponseConfigurationsInner
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getConfigurationById(id: String, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> GetConfigurations200ResponseConfigurationsInner {
        return try await getConfigurationByIdWithRequestBuilder(id: id, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get a single pole inspection configuration by ID
     - GET /pole-inspection/configurations/{id}
     - parameter id: (path)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<GetConfigurations200ResponseConfigurationsInner> 
     */
    open class func getConfigurationByIdWithRequestBuilder(id: String, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<GetConfigurations200ResponseConfigurationsInner> {
        var localVariablePath = "/pole-inspection/configurations/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetConfigurations200ResponseConfigurationsInner>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get all pole inspection configurations
     
     - parameter search: (query)  (optional)
     - parameter limit: (query)  (optional, default to 50)
     - parameter offset: (query)  (optional, default to 0)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: GetConfigurations200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getConfigurations(search: String? = nil, limit: Double? = nil, offset: Double? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> GetConfigurations200Response {
        return try await getConfigurationsWithRequestBuilder(search: search, limit: limit, offset: offset, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get all pole inspection configurations
     - GET /pole-inspection/configurations
     - parameter search: (query)  (optional)
     - parameter limit: (query)  (optional, default to 50)
     - parameter offset: (query)  (optional, default to 0)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<GetConfigurations200Response> 
     */
    open class func getConfigurationsWithRequestBuilder(search: String? = nil, limit: Double? = nil, offset: Double? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<GetConfigurations200Response> {
        let localVariablePath = "/pole-inspection/configurations"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "search": (wrappedValue: search?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "limit": (wrappedValue: limit?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "offset": (wrappedValue: offset?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetConfigurations200Response>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get a single pole inspection job by ID
     
     - parameter id: (path)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: GetJobs200ResponseJobsInner
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getJobById(id: String, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> GetJobs200ResponseJobsInner {
        return try await getJobByIdWithRequestBuilder(id: id, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get a single pole inspection job by ID
     - GET /pole-inspection/jobs/{id}
     - parameter id: (path)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<GetJobs200ResponseJobsInner> 
     */
    open class func getJobByIdWithRequestBuilder(id: String, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<GetJobs200ResponseJobsInner> {
        var localVariablePath = "/pole-inspection/jobs/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetJobs200ResponseJobsInner>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get job statistics and analytics
     
     - parameter startDate: (query)  (optional)
     - parameter endDate: (query)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: GetJobStatistics200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getJobStatistics(startDate: Date? = nil, endDate: Date? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> GetJobStatistics200Response {
        return try await getJobStatisticsWithRequestBuilder(startDate: startDate, endDate: endDate, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get job statistics and analytics
     - GET /pole-inspection/jobs/statistics
     - parameter startDate: (query)  (optional)
     - parameter endDate: (query)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<GetJobStatistics200Response> 
     */
    open class func getJobStatisticsWithRequestBuilder(startDate: Date? = nil, endDate: Date? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<GetJobStatistics200Response> {
        let localVariablePath = "/pole-inspection/jobs/statistics"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "startDate": (wrappedValue: startDate?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "endDate": (wrappedValue: endDate?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetJobStatistics200Response>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     * enum for parameter status
     */
    public enum Status_getJobs: String, Sendable, CaseIterable {
        case pending = "pending"
        case inProgress = "in_progress"
        case completed = "completed"
        case cancelled = "cancelled"
    }

    /**
     * enum for parameter sortBy
     */
    public enum SortBy_getJobs: String, Sendable, CaseIterable {
        case name = "name"
        case createdAt = "created_at"
        case updatedAt = "updated_at"
        case status = "status"
    }

    /**
     * enum for parameter sortOrder
     */
    public enum SortOrder_getJobs: String, Sendable, CaseIterable {
        case asc = "asc"
        case desc = "desc"
    }

    /**
     Get all pole inspection jobs with filtering and pagination
     
     - parameter status: (query)  (optional)
     - parameter configurationId: (query)  (optional)
     - parameter assignedTo: (query)  (optional)
     - parameter search: (query)  (optional)
     - parameter limit: (query)  (optional, default to 50)
     - parameter offset: (query)  (optional, default to 0)
     - parameter sortBy: (query)  (optional, default to .createdAt)
     - parameter sortOrder: (query)  (optional, default to .desc)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: GetJobs200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getJobs(status: Status_getJobs? = nil, configurationId: UUID? = nil, assignedTo: UUID? = nil, search: String? = nil, limit: Double? = nil, offset: Double? = nil, sortBy: SortBy_getJobs? = nil, sortOrder: SortOrder_getJobs? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> GetJobs200Response {
        return try await getJobsWithRequestBuilder(status: status, configurationId: configurationId, assignedTo: assignedTo, search: search, limit: limit, offset: offset, sortBy: sortBy, sortOrder: sortOrder, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get all pole inspection jobs with filtering and pagination
     - GET /pole-inspection/jobs
     - parameter status: (query)  (optional)
     - parameter configurationId: (query)  (optional)
     - parameter assignedTo: (query)  (optional)
     - parameter search: (query)  (optional)
     - parameter limit: (query)  (optional, default to 50)
     - parameter offset: (query)  (optional, default to 0)
     - parameter sortBy: (query)  (optional, default to .createdAt)
     - parameter sortOrder: (query)  (optional, default to .desc)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<GetJobs200Response> 
     */
    open class func getJobsWithRequestBuilder(status: Status_getJobs? = nil, configurationId: UUID? = nil, assignedTo: UUID? = nil, search: String? = nil, limit: Double? = nil, offset: Double? = nil, sortBy: SortBy_getJobs? = nil, sortOrder: SortOrder_getJobs? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<GetJobs200Response> {
        let localVariablePath = "/pole-inspection/jobs"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "status": (wrappedValue: status?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "configurationId": (wrappedValue: configurationId?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "assignedTo": (wrappedValue: assignedTo?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "search": (wrappedValue: search?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "limit": (wrappedValue: limit?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "offset": (wrappedValue: offset?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "sortBy": (wrappedValue: sortBy?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "sortOrder": (wrappedValue: sortOrder?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetJobs200Response>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get the current migration status
     
     - parameter apiConfiguration: The configuration for the http request.
     - returns: MigrateFromKV200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getMigrationStatus(apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> MigrateFromKV200Response {
        return try await getMigrationStatusWithRequestBuilder(apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get the current migration status
     - GET /pole-inspection/migrate/status
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<MigrateFromKV200Response> 
     */
    open class func getMigrationStatusWithRequestBuilder(apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<MigrateFromKV200Response> {
        let localVariablePath = "/pole-inspection/migrate/status"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<MigrateFromKV200Response>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Migrate pole inspection data from KV storage to database
     
     - parameter migrateFromKVRequest: (body) Body (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: MigrateFromKV200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func migrateFromKV(migrateFromKVRequest: MigrateFromKVRequest? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> MigrateFromKV200Response {
        return try await migrateFromKVWithRequestBuilder(migrateFromKVRequest: migrateFromKVRequest, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Migrate pole inspection data from KV storage to database
     - POST /pole-inspection/migrate
     - parameter migrateFromKVRequest: (body) Body (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<MigrateFromKV200Response> 
     */
    open class func migrateFromKVWithRequestBuilder(migrateFromKVRequest: MigrateFromKVRequest? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<MigrateFromKV200Response> {
        let localVariablePath = "/pole-inspection/migrate"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: migrateFromKVRequest, codableHelper: apiConfiguration.codableHelper)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<MigrateFromKV200Response>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Update an existing pole inspection configuration
     
     - parameter id: (path)  
     - parameter updateConfigurationRequest: (body) Body (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: GetConfigurations200ResponseConfigurationsInner
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func updateConfiguration(id: String, updateConfigurationRequest: UpdateConfigurationRequest? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> GetConfigurations200ResponseConfigurationsInner {
        return try await updateConfigurationWithRequestBuilder(id: id, updateConfigurationRequest: updateConfigurationRequest, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Update an existing pole inspection configuration
     - PUT /pole-inspection/configurations/{id}
     - parameter id: (path)  
     - parameter updateConfigurationRequest: (body) Body (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<GetConfigurations200ResponseConfigurationsInner> 
     */
    open class func updateConfigurationWithRequestBuilder(id: String, updateConfigurationRequest: UpdateConfigurationRequest? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<GetConfigurations200ResponseConfigurationsInner> {
        var localVariablePath = "/pole-inspection/configurations/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: updateConfigurationRequest, codableHelper: apiConfiguration.codableHelper)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetConfigurations200ResponseConfigurationsInner>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Update an existing pole inspection job
     
     - parameter id: (path)  
     - parameter updateJobRequest: (body) Body (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: GetJobs200ResponseJobsInner
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func updateJob(id: String, updateJobRequest: UpdateJobRequest? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> GetJobs200ResponseJobsInner {
        return try await updateJobWithRequestBuilder(id: id, updateJobRequest: updateJobRequest, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Update an existing pole inspection job
     - PUT /pole-inspection/jobs/{id}
     - parameter id: (path)  
     - parameter updateJobRequest: (body) Body (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<GetJobs200ResponseJobsInner> 
     */
    open class func updateJobWithRequestBuilder(id: String, updateJobRequest: UpdateJobRequest? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<GetJobs200ResponseJobsInner> {
        var localVariablePath = "/pole-inspection/jobs/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: updateJobRequest, codableHelper: apiConfiguration.codableHelper)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetJobs200ResponseJobsInner>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }
}
