//
// EsriAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class EsriAPI {

    /**
     Get geocode result from ESRI
     
     - parameter magicKey: (query)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: GetGeocodeResult200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getGeocodeResult(magicKey: String, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> GetGeocodeResult200Response {
        return try await getGeocodeResultWithRequestBuilder(magicKey: magicKey, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get geocode result from ESRI
     - GET /esri/geocode
     - parameter magicKey: (query)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<GetGeocodeResult200Response> 
     */
    open class func getGeocodeResultWithRequestBuilder(magicKey: String, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<GetGeocodeResult200Response> {
        let localVariablePath = "/esri/geocode"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "magicKey": (wrappedValue: magicKey.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetGeocodeResult200Response>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get geocoding suggestions from ESRI
     
     - parameter text: (query)  (optional)
     - parameter maxSuggestions: (query)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: GetSuggestions200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getSuggestions(text: String? = nil, maxSuggestions: Double? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> GetSuggestions200Response {
        return try await getSuggestionsWithRequestBuilder(text: text, maxSuggestions: maxSuggestions, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get geocoding suggestions from ESRI
     - GET /esri/suggestions
     - parameter text: (query)  (optional)
     - parameter maxSuggestions: (query)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<GetSuggestions200Response> 
     */
    open class func getSuggestionsWithRequestBuilder(text: String? = nil, maxSuggestions: Double? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<GetSuggestions200Response> {
        let localVariablePath = "/esri/suggestions"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "text": (wrappedValue: text?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "maxSuggestions": (wrappedValue: maxSuggestions?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetSuggestions200Response>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }
}
