//
// NotificationAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class NotificationAPI {

    /**
     Create a new notification request
     
     - parameter notificationRequestSchema: (body) Body (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: UpdateFile200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func createNotification(notificationRequestSchema: NotificationRequestSchema? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> UpdateFile200Response {
        return try await createNotificationWithRequestBuilder(notificationRequestSchema: notificationRequestSchema, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Create a new notification request
     - PUT /notification
     - parameter notificationRequestSchema: (body) Body (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<UpdateFile200Response> 
     */
    open class func createNotificationWithRequestBuilder(notificationRequestSchema: NotificationRequestSchema? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<UpdateFile200Response> {
        let localVariablePath = "/notification"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: notificationRequestSchema, codableHelper: apiConfiguration.codableHelper)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UpdateFile200Response>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     Get all notifications
     
     - parameter getNotificationsRequest: (body) Body (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: [NotificationSchema]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getNotifications(getNotificationsRequest: GetNotificationsRequest? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) async throws(ErrorResponse) -> [NotificationSchema] {
        return try await getNotificationsWithRequestBuilder(getNotificationsRequest: getNotificationsRequest, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Get all notifications
     - POST /notifications
     - parameter getNotificationsRequest: (body) Body (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<[NotificationSchema]> 
     */
    open class func getNotificationsWithRequestBuilder(getNotificationsRequest: GetNotificationsRequest? = nil, apiConfiguration: Cloneable_Swift_ClientAPIConfiguration = Cloneable_Swift_ClientAPIConfiguration.shared) -> RequestBuilder<[NotificationSchema]> {
        let localVariablePath = "/notifications"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: getNotificationsRequest, codableHelper: apiConfiguration.codableHelper)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[NotificationSchema]>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }
}
