//
// ModelSchema.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct ModelSchema: Sendable, Codable, ParameterConvertible, Hashable {

    public var id: UUID
    public var companyId: String
    public var createdAt: Date
    public var displayName: String
    public var description: String
    public var frameworkType: String
    public var updatedAt: Date
    public var fileId: UUID
    public var createdBy: String

    public init(id: UUID, companyId: String, createdAt: Date, displayName: String, description: String, frameworkType: String, updatedAt: Date, fileId: UUID, createdBy: String) {
        self.id = id
        self.companyId = companyId
        self.createdAt = createdAt
        self.displayName = displayName
        self.description = description
        self.frameworkType = frameworkType
        self.updatedAt = updatedAt
        self.fileId = fileId
        self.createdBy = createdBy
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case companyId = "company_id"
        case createdAt = "created_at"
        case displayName = "display_name"
        case description
        case frameworkType = "framework_type"
        case updatedAt = "updated_at"
        case fileId = "file_id"
        case createdBy = "created_by"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(companyId, forKey: .companyId)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(displayName, forKey: .displayName)
        try container.encode(description, forKey: .description)
        try container.encode(frameworkType, forKey: .frameworkType)
        try container.encode(updatedAt, forKey: .updatedAt)
        try container.encode(fileId, forKey: .fileId)
        try container.encode(createdBy, forKey: .createdBy)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ModelSchema: Identifiable {}
