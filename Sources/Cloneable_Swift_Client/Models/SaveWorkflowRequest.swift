//
// SaveWorkflowRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct SaveWorkflowRequest: Sendable, Codable, ParameterConvertible, Hashable {

    public var id: String?
    public var workflowName: String?
    public var workflowDescription: String?
    public var draft: Bool?
    public var company: String?
    public var createdBy: String?
    public var createdAt: String?
    public var updatedAt: String?
    public var lastModifiedAt: String?
    public var revision: Double?
    public var typeRefId: String?
    public var builderObject: SaveWorkflowRequestBuilderObject?
    public var resources: [SaveWorkflowRequestResourcesInner]?

    public init(id: String? = nil, workflowName: String? = nil, workflowDescription: String? = nil, draft: Bool? = nil, company: String? = nil, createdBy: String? = nil, createdAt: String? = nil, updatedAt: String? = nil, lastModifiedAt: String? = nil, revision: Double? = nil, typeRefId: String? = nil, builderObject: SaveWorkflowRequestBuilderObject? = nil, resources: [SaveWorkflowRequestResourcesInner]? = nil) {
        self.id = id
        self.workflowName = workflowName
        self.workflowDescription = workflowDescription
        self.draft = draft
        self.company = company
        self.createdBy = createdBy
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.lastModifiedAt = lastModifiedAt
        self.revision = revision
        self.typeRefId = typeRefId
        self.builderObject = builderObject
        self.resources = resources
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id = "_id"
        case workflowName = "workflow_name"
        case workflowDescription = "workflow_description"
        case draft
        case company
        case createdBy = "created_by"
        case createdAt = "created_at"
        case updatedAt = "updated_at"
        case lastModifiedAt = "last_modified_at"
        case revision
        case typeRefId = "type_ref_id"
        case builderObject = "builder_object"
        case resources
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(workflowName, forKey: .workflowName)
        try container.encodeIfPresent(workflowDescription, forKey: .workflowDescription)
        try container.encodeIfPresent(draft, forKey: .draft)
        try container.encodeIfPresent(company, forKey: .company)
        try container.encodeIfPresent(createdBy, forKey: .createdBy)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(updatedAt, forKey: .updatedAt)
        try container.encodeIfPresent(lastModifiedAt, forKey: .lastModifiedAt)
        try container.encodeIfPresent(revision, forKey: .revision)
        try container.encodeIfPresent(typeRefId, forKey: .typeRefId)
        try container.encodeIfPresent(builderObject, forKey: .builderObject)
        try container.encodeIfPresent(resources, forKey: .resources)
    }
}

