//
// GetTriggerTemplates200ResponseInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct GetTriggerTemplates200ResponseInner: Sendable, Codable, ParameterConvertible, Hashable {

    public enum Runtime: String, Sendable, Codable, CaseIterable {
        case python = "python"
        case javascript = "javascript"
    }
    public enum ExecutionType: String, Sendable, Codable, CaseIterable {
        case single = "single"
        case multiple = "multiple"
    }
    public var id: String
    public var name: String
    public var description: String
    public var runtime: Runtime
    public var type: String
    public var executionType: ExecutionType?
    public var executionWaitTime: Double?
    public var inputSchema: GetTriggerTemplates200ResponseInnerInputSchema
    public var outputSchema: GetTriggerTemplates200ResponseInnerInputSchema
    public var requiredSecrets: [String]?
    public var configParams: GetTriggerTemplates200ResponseInnerConfigParams?
    public var resourceLimits: GetTriggerTemplates200ResponseInnerResourceLimits?

    public init(id: String, name: String, description: String, runtime: Runtime, type: String, executionType: ExecutionType? = nil, executionWaitTime: Double? = nil, inputSchema: GetTriggerTemplates200ResponseInnerInputSchema, outputSchema: GetTriggerTemplates200ResponseInnerInputSchema, requiredSecrets: [String]? = nil, configParams: GetTriggerTemplates200ResponseInnerConfigParams? = nil, resourceLimits: GetTriggerTemplates200ResponseInnerResourceLimits? = nil) {
        self.id = id
        self.name = name
        self.description = description
        self.runtime = runtime
        self.type = type
        self.executionType = executionType
        self.executionWaitTime = executionWaitTime
        self.inputSchema = inputSchema
        self.outputSchema = outputSchema
        self.requiredSecrets = requiredSecrets
        self.configParams = configParams
        self.resourceLimits = resourceLimits
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case description
        case runtime
        case type
        case executionType = "execution_type"
        case executionWaitTime = "execution_wait_time"
        case inputSchema = "input_schema"
        case outputSchema = "output_schema"
        case requiredSecrets = "required_secrets"
        case configParams = "config_params"
        case resourceLimits = "resource_limits"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encode(description, forKey: .description)
        try container.encode(runtime, forKey: .runtime)
        try container.encode(type, forKey: .type)
        try container.encodeIfPresent(executionType, forKey: .executionType)
        try container.encodeIfPresent(executionWaitTime, forKey: .executionWaitTime)
        try container.encode(inputSchema, forKey: .inputSchema)
        try container.encode(outputSchema, forKey: .outputSchema)
        try container.encodeIfPresent(requiredSecrets, forKey: .requiredSecrets)
        try container.encodeIfPresent(configParams, forKey: .configParams)
        try container.encodeIfPresent(resourceLimits, forKey: .resourceLimits)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension GetTriggerTemplates200ResponseInner: Identifiable {}
