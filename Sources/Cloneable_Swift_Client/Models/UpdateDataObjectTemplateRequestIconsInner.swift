//
// UpdateDataObjectTemplateRequestIconsInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct UpdateDataObjectTemplateRequestIconsInner: Sendable, Codable, ParameterConvertible, Hashable {

    public enum MapType: String, Sendable, Codable, CaseIterable {
        case point = "point"
        case line = "line"
    }
    public enum LineStyle: String, Sendable, Codable, CaseIterable {
        case solid = "solid"
        case dash = "dash"
        case dot = "dot"
        case dashDot = "dash-dot"
        case shortDot = "short-dot"
        case shortDash = "short-dash"
        case shortDashDot = "short-dash-dot"
        case shortDashDotDot = "short-dash-dot-dot"
        case longDash = "long-dash"
        case longDashDot = "long-dash-dot"
        case longDashDotDot = "long-dash-dot-dot"
    }
    public var id: String
    public var name: String
    public var stokeColor: String
    public var fillColor: String?
    public var encoded: String
    public var conditional: String?
    public var iconKey: String
    public var mapType: MapType? = .point
    public var lineStyle: LineStyle? = .solid

    public init(id: String, name: String, stokeColor: String, fillColor: String? = nil, encoded: String, conditional: String? = nil, iconKey: String, mapType: MapType? = .point, lineStyle: LineStyle? = .solid) {
        self.id = id
        self.name = name
        self.stokeColor = stokeColor
        self.fillColor = fillColor
        self.encoded = encoded
        self.conditional = conditional
        self.iconKey = iconKey
        self.mapType = mapType
        self.lineStyle = lineStyle
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case stokeColor = "stoke_color"
        case fillColor = "fill_color"
        case encoded
        case conditional
        case iconKey = "icon_key"
        case mapType = "map_type"
        case lineStyle = "line_style"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encode(stokeColor, forKey: .stokeColor)
        try container.encodeIfPresent(fillColor, forKey: .fillColor)
        try container.encode(encoded, forKey: .encoded)
        try container.encodeIfPresent(conditional, forKey: .conditional)
        try container.encode(iconKey, forKey: .iconKey)
        try container.encodeIfPresent(mapType, forKey: .mapType)
        try container.encodeIfPresent(lineStyle, forKey: .lineStyle)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension UpdateDataObjectTemplateRequestIconsInner: Identifiable {}
