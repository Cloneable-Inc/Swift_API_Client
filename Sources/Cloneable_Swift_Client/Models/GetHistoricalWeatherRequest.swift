//
// GetHistoricalWeatherRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct GetHistoricalWeatherRequest: Sendable, Codable, ParameterConvertible, Hashable {

    public enum Units: String, Sendable, Codable, CaseIterable {
        case metric = "metric"
        case imperial = "imperial"
    }
    public static let latitudeRule = NumericRule<Double>(minimum: -90, exclusiveMinimum: false, maximum: 90, exclusiveMaximum: false, multipleOf: nil)
    public static let longitudeRule = NumericRule<Double>(minimum: -180, exclusiveMinimum: false, maximum: 180, exclusiveMaximum: false, multipleOf: nil)
    public var latitude: Double
    public var longitude: Double
    public var timestamp: String
    public var units: Units? = .metric

    public init(latitude: Double, longitude: Double, timestamp: String, units: Units? = .metric) {
        self.latitude = latitude
        self.longitude = longitude
        self.timestamp = timestamp
        self.units = units
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case latitude
        case longitude
        case timestamp
        case units
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(latitude, forKey: .latitude)
        try container.encode(longitude, forKey: .longitude)
        try container.encode(timestamp, forKey: .timestamp)
        try container.encodeIfPresent(units, forKey: .units)
    }
}

