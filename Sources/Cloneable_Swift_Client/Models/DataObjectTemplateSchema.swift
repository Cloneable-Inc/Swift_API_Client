//
// DataObjectTemplateSchema.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct DataObjectTemplateSchema: Sendable, Codable, ParameterConvertible, Hashable {

    public static let revisionRule = NumericRule<Int>(minimum: -2147483648, exclusiveMinimum: false, maximum: 2147483647, exclusiveMaximum: false, multipleOf: nil)
    public var id: String
    public var nameId: String
    public var objectId: UUID
    public var objectDescription: String
    public var objectDisplayName: String
    public var objectName: String
    public var fields: [UpdateDataObjectTemplateRequestFieldsInner]
    public var revision: Int
    public var typeRefId: String?
    public var modifiedBy: String?
    public var createdBy: String?
    public var createdAt: Date
    public var modifiedAt: Date
    public var isTemplate: Bool
    public var icons: [GetOneDataObjectTemplateByObjectTemplateId200ResponseIconsInner]
    public var companyId: String?

    public init(id: String, nameId: String, objectId: UUID, objectDescription: String, objectDisplayName: String, objectName: String, fields: [UpdateDataObjectTemplateRequestFieldsInner], revision: Int, typeRefId: String?, modifiedBy: String?, createdBy: String?, createdAt: Date, modifiedAt: Date, isTemplate: Bool, icons: [GetOneDataObjectTemplateByObjectTemplateId200ResponseIconsInner], companyId: String? = nil) {
        self.id = id
        self.nameId = nameId
        self.objectId = objectId
        self.objectDescription = objectDescription
        self.objectDisplayName = objectDisplayName
        self.objectName = objectName
        self.fields = fields
        self.revision = revision
        self.typeRefId = typeRefId
        self.modifiedBy = modifiedBy
        self.createdBy = createdBy
        self.createdAt = createdAt
        self.modifiedAt = modifiedAt
        self.isTemplate = isTemplate
        self.icons = icons
        self.companyId = companyId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case nameId = "name_id"
        case objectId = "object_id"
        case objectDescription = "object_description"
        case objectDisplayName = "object_display_name"
        case objectName = "object_name"
        case fields
        case revision
        case typeRefId = "type_ref_id"
        case modifiedBy = "modified_by"
        case createdBy = "created_by"
        case createdAt = "created_at"
        case modifiedAt = "modified_at"
        case isTemplate = "is_template"
        case icons
        case companyId = "company_id"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(nameId, forKey: .nameId)
        try container.encode(objectId, forKey: .objectId)
        try container.encode(objectDescription, forKey: .objectDescription)
        try container.encode(objectDisplayName, forKey: .objectDisplayName)
        try container.encode(objectName, forKey: .objectName)
        try container.encode(fields, forKey: .fields)
        try container.encode(revision, forKey: .revision)
        try container.encode(typeRefId, forKey: .typeRefId)
        try container.encode(modifiedBy, forKey: .modifiedBy)
        try container.encode(createdBy, forKey: .createdBy)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(modifiedAt, forKey: .modifiedAt)
        try container.encode(isTemplate, forKey: .isTemplate)
        try container.encode(icons, forKey: .icons)
        try container.encodeIfPresent(companyId, forKey: .companyId)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension DataObjectTemplateSchema: Identifiable {}
