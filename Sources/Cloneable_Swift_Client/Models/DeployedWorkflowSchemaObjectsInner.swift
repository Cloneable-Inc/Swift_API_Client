//
// DeployedWorkflowSchemaObjectsInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct DeployedWorkflowSchemaObjectsInner: Sendable, Codable, ParameterConvertible, Hashable {

    public var company: String
    public var createdAt: String
    public var createdBy: String
    public var objectDynamicCreateNewHandleId: String
    public var dynamicObjectId: String
    public var typeRefId: String
    public var syncOnInputs: Bool
    public var outputOnFieldChange: Bool
    public var configuration: String
    public var fields: [DeployedWorkflowSchemaObjectsInnerFieldsInner]
    public var id: String
    public var isTemplate: Bool
    public var modifiedAt: String
    public var modifiedBy: String
    public var objectDescription: String
    public var objectDisplayName: String
    public var objectId: String
    public var objectName: String
    public var objectOutputDynamicId: String
    public var revision: Double
    public var type: String

    public init(company: String, createdAt: String, createdBy: String, objectDynamicCreateNewHandleId: String, dynamicObjectId: String, typeRefId: String, syncOnInputs: Bool, outputOnFieldChange: Bool, configuration: String, fields: [DeployedWorkflowSchemaObjectsInnerFieldsInner], id: String, isTemplate: Bool, modifiedAt: String, modifiedBy: String, objectDescription: String, objectDisplayName: String, objectId: String, objectName: String, objectOutputDynamicId: String, revision: Double, type: String) {
        self.company = company
        self.createdAt = createdAt
        self.createdBy = createdBy
        self.objectDynamicCreateNewHandleId = objectDynamicCreateNewHandleId
        self.dynamicObjectId = dynamicObjectId
        self.typeRefId = typeRefId
        self.syncOnInputs = syncOnInputs
        self.outputOnFieldChange = outputOnFieldChange
        self.configuration = configuration
        self.fields = fields
        self.id = id
        self.isTemplate = isTemplate
        self.modifiedAt = modifiedAt
        self.modifiedBy = modifiedBy
        self.objectDescription = objectDescription
        self.objectDisplayName = objectDisplayName
        self.objectId = objectId
        self.objectName = objectName
        self.objectOutputDynamicId = objectOutputDynamicId
        self.revision = revision
        self.type = type
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case company
        case createdAt = "created_at"
        case createdBy = "created_by"
        case objectDynamicCreateNewHandleId = "object_dynamic_create_new_handle_id"
        case dynamicObjectId = "dynamic_object_id"
        case typeRefId = "type_ref_id"
        case syncOnInputs = "sync_on_inputs"
        case outputOnFieldChange = "output_on_field_change"
        case configuration
        case fields
        case id
        case isTemplate = "is_template"
        case modifiedAt = "modified_at"
        case modifiedBy = "modified_by"
        case objectDescription = "object_description"
        case objectDisplayName = "object_display_name"
        case objectId = "object_id"
        case objectName = "object_name"
        case objectOutputDynamicId = "object_output_dynamic_id"
        case revision
        case type
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(company, forKey: .company)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(createdBy, forKey: .createdBy)
        try container.encode(objectDynamicCreateNewHandleId, forKey: .objectDynamicCreateNewHandleId)
        try container.encode(dynamicObjectId, forKey: .dynamicObjectId)
        try container.encode(typeRefId, forKey: .typeRefId)
        try container.encode(syncOnInputs, forKey: .syncOnInputs)
        try container.encode(outputOnFieldChange, forKey: .outputOnFieldChange)
        try container.encode(configuration, forKey: .configuration)
        try container.encode(fields, forKey: .fields)
        try container.encode(id, forKey: .id)
        try container.encode(isTemplate, forKey: .isTemplate)
        try container.encode(modifiedAt, forKey: .modifiedAt)
        try container.encode(modifiedBy, forKey: .modifiedBy)
        try container.encode(objectDescription, forKey: .objectDescription)
        try container.encode(objectDisplayName, forKey: .objectDisplayName)
        try container.encode(objectId, forKey: .objectId)
        try container.encode(objectName, forKey: .objectName)
        try container.encode(objectOutputDynamicId, forKey: .objectOutputDynamicId)
        try container.encode(revision, forKey: .revision)
        try container.encode(type, forKey: .type)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension DeployedWorkflowSchemaObjectsInner: Identifiable {}
