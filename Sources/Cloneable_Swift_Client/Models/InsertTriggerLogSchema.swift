//
// InsertTriggerLogSchema.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct InsertTriggerLogSchema: Sendable, Codable, ParameterConvertible, Hashable {

    public var id: UUID?
    public var executionId: UUID
    public var author: String
    public var level: String
    public var message: String
    public var timestamp: Date?
    public var metadata: TriggerExecutionStopRequestLogsInnerMetadata

    public init(id: UUID? = nil, executionId: UUID, author: String, level: String, message: String, timestamp: Date?, metadata: TriggerExecutionStopRequestLogsInnerMetadata) {
        self.id = id
        self.executionId = executionId
        self.author = author
        self.level = level
        self.message = message
        self.timestamp = timestamp
        self.metadata = metadata
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case executionId = "execution_id"
        case author
        case level
        case message
        case timestamp
        case metadata
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encode(executionId, forKey: .executionId)
        try container.encode(author, forKey: .author)
        try container.encode(level, forKey: .level)
        try container.encode(message, forKey: .message)
        try container.encode(timestamp, forKey: .timestamp)
        try container.encode(metadata, forKey: .metadata)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension InsertTriggerLogSchema: Identifiable {}
