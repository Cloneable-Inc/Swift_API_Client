//
// DataObjectSchema.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct DataObjectSchema: Sendable, Codable, ParameterConvertible, Hashable {

    public var id: String
    public var companyId: String
    public var createdAt: Date
    public var createdBy: String?
    public var fields: [DataObjectSchemaFieldsInner]
    public var modifiedAt: Date
    public var archivedAt: Date?
    public var objectDescription: String
    public var objectDisplayName: String
    /** Object template ID */
    public var objectTemplateId: String
    public var objectName: String
    public var objectRevision: Double
    public var objectTemplateRevision: Double
    public var typeRefId: String
    public var teamId: String?

    public init(id: String, companyId: String, createdAt: Date, createdBy: String? = nil, fields: [DataObjectSchemaFieldsInner], modifiedAt: Date, archivedAt: Date? = nil, objectDescription: String, objectDisplayName: String, objectTemplateId: String, objectName: String, objectRevision: Double, objectTemplateRevision: Double, typeRefId: String, teamId: String? = nil) {
        self.id = id
        self.companyId = companyId
        self.createdAt = createdAt
        self.createdBy = createdBy
        self.fields = fields
        self.modifiedAt = modifiedAt
        self.archivedAt = archivedAt
        self.objectDescription = objectDescription
        self.objectDisplayName = objectDisplayName
        self.objectTemplateId = objectTemplateId
        self.objectName = objectName
        self.objectRevision = objectRevision
        self.objectTemplateRevision = objectTemplateRevision
        self.typeRefId = typeRefId
        self.teamId = teamId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case companyId = "company_id"
        case createdAt = "created_at"
        case createdBy = "created_by"
        case fields
        case modifiedAt = "modified_at"
        case archivedAt = "archived_at"
        case objectDescription = "object_description"
        case objectDisplayName = "object_display_name"
        case objectTemplateId = "object_template_id"
        case objectName = "object_name"
        case objectRevision = "object_revision"
        case objectTemplateRevision = "object_template_revision"
        case typeRefId = "type_ref_id"
        case teamId = "team_id"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(companyId, forKey: .companyId)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(createdBy, forKey: .createdBy)
        try container.encode(fields, forKey: .fields)
        try container.encode(modifiedAt, forKey: .modifiedAt)
        try container.encodeIfPresent(archivedAt, forKey: .archivedAt)
        try container.encode(objectDescription, forKey: .objectDescription)
        try container.encode(objectDisplayName, forKey: .objectDisplayName)
        try container.encode(objectTemplateId, forKey: .objectTemplateId)
        try container.encode(objectName, forKey: .objectName)
        try container.encode(objectRevision, forKey: .objectRevision)
        try container.encode(objectTemplateRevision, forKey: .objectTemplateRevision)
        try container.encode(typeRefId, forKey: .typeRefId)
        try container.encodeIfPresent(teamId, forKey: .teamId)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension DataObjectSchema: Identifiable {}
