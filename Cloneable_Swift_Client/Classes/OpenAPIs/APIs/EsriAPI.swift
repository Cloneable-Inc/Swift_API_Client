//
// EsriAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class EsriAPI {

    /**
     Get geocode result from ESRI
     
     - parameter magicKey: (query)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getGeocodeResult(magicKey: String, apiResponseQueue: DispatchQueue = Cloneable_Swift_ClientAPI.apiResponseQueue, completion: @escaping ((_ data: GetGeocodeResult200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return getGeocodeResultWithRequestBuilder(magicKey: magicKey).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get geocode result from ESRI
     - GET /esri/geocode
     - parameter magicKey: (query)  
     - returns: RequestBuilder<GetGeocodeResult200Response> 
     */
    open class func getGeocodeResultWithRequestBuilder(magicKey: String) -> RequestBuilder<GetGeocodeResult200Response> {
        let localVariablePath = "/esri/geocode"
        let localVariableURLString = Cloneable_Swift_ClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "magicKey": (wrappedValue: magicKey.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetGeocodeResult200Response>.Type = Cloneable_Swift_ClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get geocoding suggestions from ESRI
     
     - parameter text: (query)  (optional)
     - parameter maxSuggestions: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getSuggestions(text: String? = nil, maxSuggestions: Double? = nil, apiResponseQueue: DispatchQueue = Cloneable_Swift_ClientAPI.apiResponseQueue, completion: @escaping ((_ data: GetSuggestions200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return getSuggestionsWithRequestBuilder(text: text, maxSuggestions: maxSuggestions).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get geocoding suggestions from ESRI
     - GET /esri/suggestions
     - parameter text: (query)  (optional)
     - parameter maxSuggestions: (query)  (optional)
     - returns: RequestBuilder<GetSuggestions200Response> 
     */
    open class func getSuggestionsWithRequestBuilder(text: String? = nil, maxSuggestions: Double? = nil) -> RequestBuilder<GetSuggestions200Response> {
        let localVariablePath = "/esri/suggestions"
        let localVariableURLString = Cloneable_Swift_ClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "text": (wrappedValue: text?.encodeToJSON(), isExplode: true),
            "maxSuggestions": (wrappedValue: maxSuggestions?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetSuggestions200Response>.Type = Cloneable_Swift_ClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
