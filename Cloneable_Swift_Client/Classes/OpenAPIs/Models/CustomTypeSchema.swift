//
// CustomTypeSchema.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CustomTypeSchema: Codable, JSONEncodable, Hashable {

    public var id: UUID
    public var name: String
    public var description: String?
    public var companyId: String
    public var createdAt: Date
    public var createdBy: String
    public var modifiedAt: Date
    public var modifiedBy: String
    public var version: String
    public var properties: [String: UpdateCustomTypeRequestPropertiesValue]
    public var isPublic: Bool

    public init(id: UUID, name: String, description: String?, companyId: String, createdAt: Date, createdBy: String, modifiedAt: Date, modifiedBy: String, version: String, properties: [String: UpdateCustomTypeRequestPropertiesValue], isPublic: Bool) {
        self.id = id
        self.name = name
        self.description = description
        self.companyId = companyId
        self.createdAt = createdAt
        self.createdBy = createdBy
        self.modifiedAt = modifiedAt
        self.modifiedBy = modifiedBy
        self.version = version
        self.properties = properties
        self.isPublic = isPublic
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case description
        case companyId = "company_id"
        case createdAt = "created_at"
        case createdBy = "created_by"
        case modifiedAt = "modified_at"
        case modifiedBy = "modified_by"
        case version
        case properties
        case isPublic = "is_public"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encode(description, forKey: .description)
        try container.encode(companyId, forKey: .companyId)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(createdBy, forKey: .createdBy)
        try container.encode(modifiedAt, forKey: .modifiedAt)
        try container.encode(modifiedBy, forKey: .modifiedBy)
        try container.encode(version, forKey: .version)
        try container.encode(properties, forKey: .properties)
        try container.encode(isPublic, forKey: .isPublic)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension CustomTypeSchema: Identifiable {}
