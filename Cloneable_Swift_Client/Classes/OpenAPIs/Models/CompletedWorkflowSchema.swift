//
// CompletedWorkflowSchema.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CompletedWorkflowSchema: Codable, JSONEncodable, Hashable {

    public var id: String
    public var name: String
    public var companyId: String
    public var finalized: Bool
    public var finalizedAt: String
    public var createdAt: String
    public var createdBy: String
    public var typeRefId: String
    public var relatedObjectTypes: [CompletedWorkflowSchemaRelatedObjectTypesInner]?
    public var workflowInstanceId: String
    public var auditTimeline: [CompletedWorkflowSchemaAuditTimelineInner]?

    public init(id: String, name: String, companyId: String, finalized: Bool, finalizedAt: String, createdAt: String, createdBy: String, typeRefId: String, relatedObjectTypes: [CompletedWorkflowSchemaRelatedObjectTypesInner]? = nil, workflowInstanceId: String, auditTimeline: [CompletedWorkflowSchemaAuditTimelineInner]? = nil) {
        self.id = id
        self.name = name
        self.companyId = companyId
        self.finalized = finalized
        self.finalizedAt = finalizedAt
        self.createdAt = createdAt
        self.createdBy = createdBy
        self.typeRefId = typeRefId
        self.relatedObjectTypes = relatedObjectTypes
        self.workflowInstanceId = workflowInstanceId
        self.auditTimeline = auditTimeline
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case companyId = "company_id"
        case finalized
        case finalizedAt = "finalized_at"
        case createdAt = "created_at"
        case createdBy = "created_by"
        case typeRefId = "type_ref_id"
        case relatedObjectTypes = "related_object_types"
        case workflowInstanceId = "workflow_instance_id"
        case auditTimeline = "audit_timeline"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encode(companyId, forKey: .companyId)
        try container.encode(finalized, forKey: .finalized)
        try container.encode(finalizedAt, forKey: .finalizedAt)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(createdBy, forKey: .createdBy)
        try container.encode(typeRefId, forKey: .typeRefId)
        try container.encodeIfPresent(relatedObjectTypes, forKey: .relatedObjectTypes)
        try container.encode(workflowInstanceId, forKey: .workflowInstanceId)
        try container.encodeIfPresent(auditTimeline, forKey: .auditTimeline)
    }
}

