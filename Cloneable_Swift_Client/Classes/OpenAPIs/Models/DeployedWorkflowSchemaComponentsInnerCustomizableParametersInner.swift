//
// DeployedWorkflowSchemaComponentsInnerCustomizableParametersInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct DeployedWorkflowSchemaComponentsInnerCustomizableParametersInner: Codable, JSONEncodable, Hashable {

    public var paramDataType: String
    public var paramDescription: String
    public var paramId: String
    public var paramGroup: String
    public var paramInputType: String
    public var paramName: String
    public var selectedValue: AnyCodable?
    public var userCustomizable: Bool
    public var relatedInputDynamicId: String
    public var relatedOutputDynamicId: String
    public var selectedValueIsArray: Bool
    public var selectedValueArray: [AnyCodable]

    public init(paramDataType: String, paramDescription: String, paramId: String, paramGroup: String, paramInputType: String, paramName: String, selectedValue: AnyCodable? = nil, userCustomizable: Bool, relatedInputDynamicId: String, relatedOutputDynamicId: String, selectedValueIsArray: Bool, selectedValueArray: [AnyCodable]) {
        self.paramDataType = paramDataType
        self.paramDescription = paramDescription
        self.paramId = paramId
        self.paramGroup = paramGroup
        self.paramInputType = paramInputType
        self.paramName = paramName
        self.selectedValue = selectedValue
        self.userCustomizable = userCustomizable
        self.relatedInputDynamicId = relatedInputDynamicId
        self.relatedOutputDynamicId = relatedOutputDynamicId
        self.selectedValueIsArray = selectedValueIsArray
        self.selectedValueArray = selectedValueArray
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case paramDataType = "param_data_type"
        case paramDescription = "param_description"
        case paramId = "param_id"
        case paramGroup = "param_group"
        case paramInputType = "param_input_type"
        case paramName = "param_name"
        case selectedValue = "selected_value"
        case userCustomizable = "user_customizable"
        case relatedInputDynamicId = "related_input_dynamic_id"
        case relatedOutputDynamicId = "related_output_dynamic_id"
        case selectedValueIsArray = "selected_value_is_array"
        case selectedValueArray = "selected_value_array"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(paramDataType, forKey: .paramDataType)
        try container.encode(paramDescription, forKey: .paramDescription)
        try container.encode(paramId, forKey: .paramId)
        try container.encode(paramGroup, forKey: .paramGroup)
        try container.encode(paramInputType, forKey: .paramInputType)
        try container.encode(paramName, forKey: .paramName)
        try container.encodeIfPresent(selectedValue, forKey: .selectedValue)
        try container.encode(userCustomizable, forKey: .userCustomizable)
        try container.encode(relatedInputDynamicId, forKey: .relatedInputDynamicId)
        try container.encode(relatedOutputDynamicId, forKey: .relatedOutputDynamicId)
        try container.encode(selectedValueIsArray, forKey: .selectedValueIsArray)
        try container.encode(selectedValueArray, forKey: .selectedValueArray)
    }
}

