//
// DataObjectDBSchema.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct DataObjectDBSchema: Codable, JSONEncodable, Hashable {

    public static let expiresAtRule = NumericRule<Int>(minimum: -2147483648, exclusiveMinimum: false, maximum: 2147483647, exclusiveMaximum: false, multipleOf: nil)
    public var id: UUID
    public var dataObjectTemplateId: UUID
    public var dataObjectTemplateNameId: String
    public var createdAt: Date?
    public var createdBy: String?
    public var teamId: String?
    public var updatedAt: Date?
    public var updatedBy: String?
    public var expiresAt: Int?
    public var metaData: AnyCodable?

    public init(id: UUID, dataObjectTemplateId: UUID, dataObjectTemplateNameId: String, createdAt: Date?, createdBy: String?, teamId: String?, updatedAt: Date?, updatedBy: String?, expiresAt: Int?, metaData: AnyCodable?) {
        self.id = id
        self.dataObjectTemplateId = dataObjectTemplateId
        self.dataObjectTemplateNameId = dataObjectTemplateNameId
        self.createdAt = createdAt
        self.createdBy = createdBy
        self.teamId = teamId
        self.updatedAt = updatedAt
        self.updatedBy = updatedBy
        self.expiresAt = expiresAt
        self.metaData = metaData
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case dataObjectTemplateId = "data_object_template_id"
        case dataObjectTemplateNameId = "data_object_template_name_id"
        case createdAt = "created_at"
        case createdBy = "created_by"
        case teamId = "team_id"
        case updatedAt = "updated_at"
        case updatedBy = "updated_by"
        case expiresAt = "expires_at"
        case metaData = "meta_data"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(dataObjectTemplateId, forKey: .dataObjectTemplateId)
        try container.encode(dataObjectTemplateNameId, forKey: .dataObjectTemplateNameId)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(createdBy, forKey: .createdBy)
        try container.encode(teamId, forKey: .teamId)
        try container.encode(updatedAt, forKey: .updatedAt)
        try container.encode(updatedBy, forKey: .updatedBy)
        try container.encode(expiresAt, forKey: .expiresAt)
        try container.encode(metaData, forKey: .metaData)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension DataObjectDBSchema: Identifiable {}
