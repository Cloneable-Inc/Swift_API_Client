//
// GetPagedWorkflowsFiltersParameter.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct GetPagedWorkflowsFiltersParameter: Codable, JSONEncodable, Hashable {

    public var company: String?
    public var createdBy: String?
    public var createdAt: GetManyFilesFiltersParameterCreatedAt?
    public var typeRefId: String?
    public var finalized: Bool?
    public var finalizedAt: GetManyFilesFiltersParameterCreatedAt?
    public var workflowInstanceId: String?
    public var relatedObjectId: String?

    public init(company: String? = nil, createdBy: String? = nil, createdAt: GetManyFilesFiltersParameterCreatedAt? = nil, typeRefId: String? = nil, finalized: Bool? = nil, finalizedAt: GetManyFilesFiltersParameterCreatedAt? = nil, workflowInstanceId: String? = nil, relatedObjectId: String? = nil) {
        self.company = company
        self.createdBy = createdBy
        self.createdAt = createdAt
        self.typeRefId = typeRefId
        self.finalized = finalized
        self.finalizedAt = finalizedAt
        self.workflowInstanceId = workflowInstanceId
        self.relatedObjectId = relatedObjectId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case company
        case createdBy = "created_by"
        case createdAt = "created_at"
        case typeRefId = "type_ref_id"
        case finalized
        case finalizedAt = "finalized_at"
        case workflowInstanceId = "workflow_instance_id"
        case relatedObjectId = "related_object_id"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(company, forKey: .company)
        try container.encodeIfPresent(createdBy, forKey: .createdBy)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(typeRefId, forKey: .typeRefId)
        try container.encodeIfPresent(finalized, forKey: .finalized)
        try container.encodeIfPresent(finalizedAt, forKey: .finalizedAt)
        try container.encodeIfPresent(workflowInstanceId, forKey: .workflowInstanceId)
        try container.encodeIfPresent(relatedObjectId, forKey: .relatedObjectId)
    }
}

