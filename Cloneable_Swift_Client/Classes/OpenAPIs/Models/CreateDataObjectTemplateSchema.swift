//
// CreateDataObjectTemplateSchema.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CreateDataObjectTemplateSchema: Codable, JSONEncodable, Hashable {

    public var id: String
    public var nameId: String
    public var objectId: UUID?
    public var objectDescription: String
    public var objectDisplayName: String
    public var objectName: String
    public var fields: [UpdateDataObjectTemplateRequestFieldsInner]
    public var revision: Double?
    public var typeRefId: String?
    public var modifiedBy: String?
    public var createdBy: String?
    public var createdAt: Date?
    public var modifiedAt: Date?
    public var isTemplate: Bool?

    public init(id: String, nameId: String, objectId: UUID? = nil, objectDescription: String, objectDisplayName: String, objectName: String, fields: [UpdateDataObjectTemplateRequestFieldsInner], revision: Double? = nil, typeRefId: String? = nil, modifiedBy: String? = nil, createdBy: String? = nil, createdAt: Date? = nil, modifiedAt: Date? = nil, isTemplate: Bool? = nil) {
        self.id = id
        self.nameId = nameId
        self.objectId = objectId
        self.objectDescription = objectDescription
        self.objectDisplayName = objectDisplayName
        self.objectName = objectName
        self.fields = fields
        self.revision = revision
        self.typeRefId = typeRefId
        self.modifiedBy = modifiedBy
        self.createdBy = createdBy
        self.createdAt = createdAt
        self.modifiedAt = modifiedAt
        self.isTemplate = isTemplate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case nameId = "name_id"
        case objectId = "object_id"
        case objectDescription = "object_description"
        case objectDisplayName = "object_display_name"
        case objectName = "object_name"
        case fields
        case revision
        case typeRefId = "type_ref_id"
        case modifiedBy = "modified_by"
        case createdBy = "created_by"
        case createdAt = "created_at"
        case modifiedAt = "modified_at"
        case isTemplate = "is_template"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(nameId, forKey: .nameId)
        try container.encodeIfPresent(objectId, forKey: .objectId)
        try container.encode(objectDescription, forKey: .objectDescription)
        try container.encode(objectDisplayName, forKey: .objectDisplayName)
        try container.encode(objectName, forKey: .objectName)
        try container.encode(fields, forKey: .fields)
        try container.encodeIfPresent(revision, forKey: .revision)
        try container.encodeIfPresent(typeRefId, forKey: .typeRefId)
        try container.encodeIfPresent(modifiedBy, forKey: .modifiedBy)
        try container.encodeIfPresent(createdBy, forKey: .createdBy)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(modifiedAt, forKey: .modifiedAt)
        try container.encodeIfPresent(isTemplate, forKey: .isTemplate)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension CreateDataObjectTemplateSchema: Identifiable {}
