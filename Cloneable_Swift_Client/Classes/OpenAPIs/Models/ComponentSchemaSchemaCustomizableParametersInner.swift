//
// ComponentSchemaSchemaCustomizableParametersInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ComponentSchemaSchemaCustomizableParametersInner: Codable, JSONEncodable, Hashable {

    public var paramName: String
    public var paramDescription: String
    public var paramDataType: String
    public var paramInputType: String?
    public var paramID: String
    public var selectedValue: AnyCodable?
    public var userCustomizable: Bool?

    public init(paramName: String, paramDescription: String, paramDataType: String, paramInputType: String? = nil, paramID: String, selectedValue: AnyCodable? = nil, userCustomizable: Bool? = nil) {
        self.paramName = paramName
        self.paramDescription = paramDescription
        self.paramDataType = paramDataType
        self.paramInputType = paramInputType
        self.paramID = paramID
        self.selectedValue = selectedValue
        self.userCustomizable = userCustomizable
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case paramName
        case paramDescription
        case paramDataType
        case paramInputType
        case paramID
        case selectedValue
        case userCustomizable
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(paramName, forKey: .paramName)
        try container.encode(paramDescription, forKey: .paramDescription)
        try container.encode(paramDataType, forKey: .paramDataType)
        try container.encodeIfPresent(paramInputType, forKey: .paramInputType)
        try container.encode(paramID, forKey: .paramID)
        try container.encodeIfPresent(selectedValue, forKey: .selectedValue)
        try container.encodeIfPresent(userCustomizable, forKey: .userCustomizable)
    }
}

